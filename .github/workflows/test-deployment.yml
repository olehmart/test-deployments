name: Test env deployment

on:
  workflow_dispatch:
  push:
    paths:
      - test/*.yml
    branches:
      - main

jobs:
  pre-deployment:
    name: Gathering changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Generates list of modified files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v31
        with:
          files: |
            test/*.yml
      # Exports list of changed files
      - id: set-matrix
        run: echo "::set-output name=matrix::[$(echo ${{ steps.changed-files.outputs.all_changed_files }} | sed 's/ /\",\"/g;s/^/\"/g;s/$/\"/g')]"
    outputs:
      deployments: ${{ steps.set-matrix.outputs.matrix }}

  test-deployment:
    name: Deploying ${{ matrix.deployment }} to Test environment
    environment: test
    needs: pre-deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deployment: ${{ fromJSON(needs.pre-deployment.outputs.deployments) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Installs python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install yq

      # Export parameters
      - name: Export parameters
        id: parameters
        run: |
          echo "::set-output name=artifact_name::$(yq -c -r '.artifact_name' ${{ matrix.deployment }})"
          echo "::set-output name=artifact_location::$(yq -c -r '.artifact_location' ${{ matrix.deployment }})"
          echo "::set-output name=artifact_version::$(yq -c -r '.artifact_version' ${{ matrix.deployment }})"
          echo "::set-output name=deployment_script::$(yq -c -r '.deployment_script' ${{ matrix.deployment }})"
          echo "::set-output name=env_vars::$(yq -c -r '.env_vars' ${{ matrix.deployment }})"
          echo "::set-output name=kind::$(yq -c -r '.kind' ${{ matrix.deployment }})"

      # Deployment steps
      - name: Running deployment
        run: |
          echo "Deploying ${{ matrix.deployment }} to ${{ env.environment }} environment"
          echo "Artifact name: ${{ steps.parameters.outputs.artifact_name }}"
          echo "Artifact location: ${{ steps.parameters.outputs.artifact_location }}"
          echo "Artifact version: ${{ steps.parameters.outputs.artifact_version }}"
          echo "Env vars: ${{ steps.parameters.outputs.env_vars }}"
          echo "Kind: ${{ steps.parameters.outputs.kind }}"

  trigger-stage-env:
    name: Propagate changes to Stage env
    needs: test-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Propagating changes to Stage env
        run: cp -f test/*.yml stage/

      # Creates pull request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: auto-deployment-stage
          base: "main"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[AUTO][STAGE] Versions update"
          body: |
            :robot: **An automated PR** was created due to changes in **stage/*.yml**.
            :information_source: By merging this PR, changes will be deployed to Stage env!
          commit-message: "auto: propagating Test changes to Stage"
          labels: |
            automated pr
