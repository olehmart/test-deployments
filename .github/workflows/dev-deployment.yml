name: DEV env deployment

on:
  workflow_dispatch:
  push:
    paths:
      - dev/*.yml
    branches:
      - main

env:
  environment: dev

jobs:
  pre-deployment:
    name: Gathering changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Generates list of modified files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v31
        with:
          files: |
            ${{ env.environment }}/*.yml
      # Exports list of changed files
      - id: set-matrix
        run: echo "::set-output name=matrix::[$(echo ${{ steps.changed-files.outputs.all_changed_files }} | sed 's/ /\",\"/g;s/^/\"/g;s/$/\"/g')]"
    outputs:
      changed_files_list: ${{ steps.set-matrix.outputs.matrix }}
      changed_files_str: ${{ steps.changed-files.outputs.all_changed_files }}


  # Deploy Azure function
  deployment-azure-function:
    needs: pre-deployment
    strategy:
      matrix:
        config: ${{ fromJSON(needs.pre-deployment.outputs.changed_files_list) }}
    uses: olehmart/test-deployments/.github/workflows/azure_function_deployment.yml@main
    with:
      config_file: ${{ matrix.config }}
      environment: development

  # Deploy Azure Web App
  deployment-azure-web-app:
    needs: pre-deployment
    strategy:
      matrix:
        config: ${{ fromJSON(needs.pre-deployment.outputs.changed_files_list) }}
    uses: olehmart/test-deployments/.github/workflows/azure_web_app_deployment.yml@main
    with:
      config_file: ${{ matrix.config }}
      environment: development

  trigger-test-env:
    name: Propagate changes to Test env
    needs: [pre-deployment, deployment-azure-function, deployment-azure-web-app]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Installs python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Installs dependencies
      - name: Install Python dependencies
        working-directory: '.github/scripts/update_deployments'
        run: pip install -r requirements.txt

      # Updates versions
      - name: Update versions
        id: changes-propagate
        run: python .github/scripts/update_deployments/main.py
        env:
          CONFIG_FILES_LIST: ${{ needs.pre-deployment.outputs.changed_files_str }}
          PREV_ENV: dev
          NEXT_ENV: test
          MAIN_BRANCH: main

      # Creates pull request
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        if: steps.changes-propagate.outputs.configs_updated == "True"
        with:
          source_branch: "auto-deployment-test"
          destination_branch: "main"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "[AUTO][TEST] Versions update"
          pr_body: |
            :robot: **An automated PR** was created due to changes in **test/*.yml**.
            :information_source: By merging this PR, changes will be deployed to Test env!
          pr_label: "automated pr"
